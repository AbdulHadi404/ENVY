{"version":3,"sources":["components/Navbar.js","custom-hooks/useInput.js","components/Notes/Important.js","fbconfig.js","components/Signin.js","components/Signup.js","App.js","reportWebVitals.js","store/rootReducer.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","Navbar","light","color","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","left","DropdownItem","to","divider","Button","outline","useInput","initialValue","value","setValue","reset","bind","onchange","e","target","Important","bindTitle","bindContent","Card","body","CardTitle","tag","Form","FormGroup","Input","type","placeholder","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","firestore","auth","SignIn","emailRef","useRef","passwordRef","error","setError","Label","innerRef","for","length","Alert","preventDefault","signInWithEmailAndPassword","current","then","res","console","log","catch","message","block","SignUp","confirmPasswordRef","displayNameRef","onSignUpHandler","a","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","App","exact","path","component","Signin","NotImportant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","fbconfig","rrfProps","config","dispatch","createFirestoreInstance","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.768b6a3d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar light color=\"light\" expand=\"md\">\r\n        <NavbarBrand href=\"/\">E N V Y</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"nav-items mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>Collection</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Notes\r\n              </DropdownToggle>\r\n              <DropdownMenu left>\r\n                <DropdownItem>\r\n                  <Link className=\"no-decor\" to=\"/notes/important\">\r\n                    Important\r\n                  </Link>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  <Link className=\"no-decor\" to=\"/notes/notimportant\">\r\n                    Not Important\r\n                  </Link>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          <Link to=\"/signin\">\r\n            <Button className=\"button-margin\" outline color=\"success\">\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/signup\">\r\n            <Button className=\"button-margin\" outline color=\"success\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState } from 'react';\r\n\r\nexport const useInput = (initialValue = '') => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const reset = () => {\r\n    setValue(initialValue);\r\n  };\r\n  const bind = {\r\n    value,\r\n    onchange: (e) => {\r\n      setValue(e.target.value);\r\n    },\r\n  };\r\n  return [value, bind, reset];\r\n};\r\n\r\nexport default useInput;\r\n","import React from 'react';\r\nimport useInput from '../../custom-hooks/useInput';\r\nimport { Button, Form, FormGroup, Input, Card, CardTitle } from 'reactstrap';\r\nimport './Card.css';\r\n\r\nconst Important = () => {\r\n  const [title, bindTitle, resetTitle] = useInput();\r\n  const [content, bindContent, resetContent] = useInput();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card-component\" body>\r\n        <CardTitle tag=\"h5\">Note</CardTitle>\r\n        <Form>\r\n          <FormGroup>\r\n            <Input type=\"text\" {...bindTitle} placeholder=\"Enter Title\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              {...bindContent}\r\n              className=\"card-textarea\"\r\n              placeholder=\"Body\"\r\n              type=\"textarea\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button>Submit</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Important;\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyCQmt1v24SU0cxerozjPm0ubT5yCD8Gqiw',\r\n  authDomain: 'envy-e9d82.firebaseapp.com',\r\n  projectId: 'envy-e9d82',\r\n  storageBucket: 'envy-e9d82.appspot.com',\r\n  messagingSenderId: '147023038686',\r\n  appId: '1:147023038686:web:dd0e67a8d8fa514d9d9a4f',\r\n  measurementId: 'G-TP0PDWJGYS',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nexport { auth };\r\nexport { db };\r\nexport default firebaseConfig;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\nimport { auth } from '../fbconfig';\r\n\r\nconst SignIn = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onSignInHandler = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        console.log(error, error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"container\">\r\n      <h1>Sign In</h1>\r\n\r\n      <FormGroup>\r\n        <Label>Email</Label>\r\n        <Input type=\"email\" innerRef={emailRef} placeholder=\"Enter Email\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"examplePassword\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          innerRef={passwordRef}\r\n          placeholder=\"Enter Password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label className=\"remember-me\">\r\n          <Input type=\"checkbox\" />\r\n          <Label> Remember Me</Label>\r\n        </Label>\r\n      </FormGroup>\r\n\r\n      {error.length ? (\r\n        <FormGroup>\r\n          <Alert color=\"danger\">\r\n            <strong>Error!</strong> {error}.\r\n          </Alert>\r\n        </FormGroup>\r\n      ) : null}\r\n\r\n      <FormGroup>\r\n        <Button onClick={onSignInHandler} type=\"submit\" block color=\"success\">\r\n          Submit\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, FormGroup, Label, Button, Input, Form } from 'reactstrap';\r\nimport { auth } from '../fbconfig';\r\n\r\nconst SignUp = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const confirmPasswordRef = useRef(null);\r\n  const displayNameRef = useRef(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onSignUpHandler = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\r\n      setError('The passwords donot match');\r\n      return;\r\n    }\r\n\r\n    await auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((res) => {\r\n        console.log(res, 'Registered');\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        console.log(error, error.message);\r\n      });\r\n\r\n    await auth.currentUser\r\n      .updateProfile({\r\n        displayName: `${displayNameRef.current.value}`,\r\n      })\r\n      .then((res) => {\r\n        console.log(res, 'Name Added');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"container\">\r\n      <h1>Sign Up</h1>\r\n\r\n      <FormGroup>\r\n        <Label>Full Name</Label>\r\n        <Input innerRef={displayNameRef} type=\"text\" placeholder=\"Full name\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Email address</Label>\r\n        <Input innerRef={emailRef} type=\"email\" placeholder=\"Enter email\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Password</Label>\r\n        <Input\r\n          innerRef={passwordRef}\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Confirm Password</Label>\r\n        <Input\r\n          innerRef={confirmPasswordRef}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      {error.length ? (\r\n        <FormGroup>\r\n          <Alert color=\"danger\">\r\n            <strong>Error!</strong> {error}.\r\n          </Alert>\r\n        </FormGroup>\r\n      ) : null}\r\n\r\n      <FormGroup>\r\n        <Button block color=\"success\" onClick={onSignUpHandler}>\r\n          Sign Up\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">Sign In?</a>\r\n        </p>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport NavBar from './components/Navbar';\nimport NotImportant from './components/Notes/Important';\nimport Important from './components/Notes/NotImportant';\nimport Signin from './components/Signin';\nimport SignUp from './components/Signup';\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Signin} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/notes/notimportant\" component={NotImportant} />\n        <Route path=\"/notes/important\" component={Important} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport {\r\n  ReactReduxFirebaseProvider,\r\n  firebaseReducer,\r\n} from 'react-redux-firebase';\r\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer, // <- needed if using firestore\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from 'redux-firestore';\nimport fbconfig from './fbconfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({ getFirebase, getFirestore }),\n      reduxFirestore(fbconfig)\n    )\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbconfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.Fragment>\n        <Router>\n          <App />\n        </Router>\n      </React.Fragment>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}