{"version":3,"sources":["components/Navbar.js","components/Notes/NoteModal.js","components/Notes/Note.js","store/actions/noteAction.js","components/Notes/NotesList.js","components/Notes/Favorites.js","custom-hooks/useInput.js","components/Notes/AddNotes.js","components/Notes/Notes.js","fbconfig.js","components/Signin.js","components/Signup.js","App.js","reportWebVitals.js","store/rootReducer.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","Navbar","light","color","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","left","to","DropdownItem","divider","Button","outline","NotesModal","note","console","log","title","content","modal","setModal","toggle","CardHeader","tag","Modal","ModalHeader","ModalBody","ModalFooter","Note","dispatch","useDispatch","favMarkup","favorite","style","margin","CardBody","CardText","CardFooter","Col","getState","getFirestore","collection","doc","id","delete","then","catch","err","deleteNote","Badge","status","update","toggleFav","marginTop","moment","createdAt","toDate","fromNow","NotesList","notes","map","Favorites","useFirestoreConnect","where","orderBy","storeAs","favNotes","useSelector","state","firestore","ordered","Container","CardColumns","xs","useInput","initialValue","value","setValue","reset","bind","onChange","e","target","AddNotes","bindTitle","resetTitle","bindContent","resetContent","fluid","body","CardTitle","Form","FormGroup","Input","type","placeholder","preventDefault","add","Date","Notes","Row","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","SignIn","emailRef","useRef","passwordRef","error","setError","Label","innerRef","for","length","Alert","signInWithEmailAndPassword","current","res","message","block","SignUp","confirmPasswordRef","displayNameRef","onSignUpHandler","a","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","App","exact","path","component","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbconfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1db40c83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar light color=\"light\" expand=\"md\">\r\n        <NavbarBrand href=\"/\">E N V Y</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"nav-items mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>Collection</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle nav caret>\r\n                Notes\r\n              </DropdownToggle>\r\n              <DropdownMenu left>\r\n                <Link className=\"no-decor\" to=\"/notes/notes\">\r\n                  <DropdownItem>Notes</DropdownItem>\r\n                </Link>\r\n                <DropdownItem divider />\r\n                <Link className=\"no-decor\" to=\"/notes/favorites\">\r\n                  <DropdownItem>Favorites</DropdownItem>\r\n                </Link>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          <Link to=\"/signin\">\r\n            <Button className=\"button-margin\" outline color=\"success\">\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/signup\">\r\n            <Button className=\"button-margin\" outline color=\"success\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  CardHeader,\r\n} from 'reactstrap';\r\nimport './Card.css';\r\n\r\nconst NotesModal = ({ note }) => {\r\n  console.log('modal hit');\r\n\r\n  const { title, content } = note;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <CardHeader className=\"effect-shine\" tag=\"h3\" onClick={toggle}>\r\n        {title}\r\n      </CardHeader>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> {title}</ModalHeader>\r\n        <ModalBody>{content}</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesModal;\r\n","import React from 'react';\r\nimport { BsHeartFill } from 'react-icons/bs';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport './Card.css';\r\nimport { deleteNote, toggleFav } from '../../store/actions/noteAction';\r\nimport {\r\n  Card,\r\n  Col,\r\n  Badge,\r\n  Button,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from 'reactstrap';\r\nimport NotesModal from './NoteModal';\r\n\r\nconst Note = ({ note }) => {\r\n  const dispatch = useDispatch();\r\n  const deleteNoteHandler = () => {\r\n    dispatch(deleteNote(note));\r\n  };\r\n  const toggleFavHandler = () => {\r\n    dispatch(toggleFav(note));\r\n  };\r\n\r\n  const favMarkup = note.favorite ? false : true;\r\n\r\n  return (\r\n    <Card className=\"text-center\" style={{ margin: 15 }}>\r\n      <NotesModal note={note}>\r\n        <CardHeader className=\"effect-shine\" tag=\"h3\">\r\n          {note.title}\r\n        </CardHeader>\r\n      </NotesModal>\r\n\r\n      <CardBody>\r\n        <CardText className=\"text\">{note.content}</CardText>\r\n      </CardBody>\r\n      <CardFooter className=\"text-muted\">\r\n        <Col>\r\n          <Button\r\n            style={{ margin: '5px' }}\r\n            color=\"info\"\r\n            outline\r\n            onClick={deleteNoteHandler}\r\n          >\r\n            Delete{' '}\r\n            <Badge color=\"info\">\r\n              <MdDeleteForever />\r\n            </Badge>\r\n          </Button>\r\n          <Button\r\n            style={{ margin: '5px' }}\r\n            color=\"danger\"\r\n            outline={favMarkup}\r\n            onClick={toggleFavHandler}\r\n          >\r\n            Favorite{' '}\r\n            <Badge color=\"danger\">\r\n              <BsHeartFill />\r\n            </Badge>\r\n          </Button>\r\n        </Col>\r\n        <Col style={{ marginTop: '10px' }}>\r\n          <CardText>{moment(note.createdAt.toDate()).fromNow()}</CardText>\r\n        </Col>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","export const addNote = (note) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection('notes')\r\n      .add({\r\n        ...note,\r\n        favorite: false,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        console.log('Note Added Successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteNote = (note) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection('notes')\r\n      .doc(note.id)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Note Deleted Successfully');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const toggleFav = (note) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const status = !note.favorite;\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection('notes')\r\n      .doc(note.id)\r\n      .update({ favorite: status })\r\n      .then(() => {\r\n        console.log('Toggle Favorite Success');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport Note from './Note';\r\nconst NotesList = ({ notes }) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {notes && notes.map((note) => <Note note={note} key={note.id} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport NotesList from './NotesList';\r\nimport { Container, Row, Col, CardColumns } from 'reactstrap';\r\n\r\nconst Favorites = () => {\r\n  console.log('favoritess');\r\n  useFirestoreConnect([\r\n    {\r\n      collection: 'notes',\r\n      where: ['favorite', '==', true],\r\n      orderBy: ['createdAt', 'desc'],\r\n      storeAs: 'favNotes',\r\n    },\r\n  ]);\r\n  const favNotes = useSelector((state) => state.firestore.ordered.favNotes);\r\n  console.log('favNotes', favNotes);\r\n  return (\r\n    <Container>\r\n      <CardColumns>\r\n        <Col xs=\"auto\">\r\n          <NotesList notes={favNotes} />\r\n        </Col>\r\n      </CardColumns>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { useState } from 'react';\r\n\r\nexport const useInput = (initialValue = '') => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const reset = () => {\r\n    setValue(initialValue);\r\n  };\r\n  const bind = {\r\n    value,\r\n    onChange: (e) => {\r\n      setValue(e.target.value);\r\n    },\r\n  };\r\n  return [value, bind, reset];\r\n};\r\n\r\nexport default useInput;\r\n","import React from 'react';\r\nimport useInput from '../../custom-hooks/useInput';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardTitle,\r\n} from 'reactstrap';\r\nimport './Card.css';\r\nimport { addNote } from '../../store/actions/noteAction';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst AddNotes = () => {\r\n  const [title, bindTitle, resetTitle] = useInput();\r\n  const [content, bindContent, resetContent] = useInput();\r\n  const dispatch = useDispatch();\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNote({ title, content }));\r\n    resetTitle();\r\n    resetContent();\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <Card className=\"text-center\" body>\r\n        <CardTitle tag=\"h5\">New Note</CardTitle>\r\n        <Form>\r\n          <FormGroup>\r\n            <Input type=\"text\" {...bindTitle} placeholder=\"Enter Title\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              {...bindContent}\r\n              className=\"card-textarea\"\r\n              placeholder=\"Body\"\r\n              type=\"textarea\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button onClick={onSubmitHandler}>Submit</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddNotes;\r\n","import React from 'react';\r\nimport AddNotes from './AddNotes';\r\nimport NotesList from './NotesList';\r\nimport { Container, Row, Col, CardColumns } from 'reactstrap';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notes = () => {\r\n  useFirestoreConnect([\r\n    { collection: 'notes', orderBy: ['createdAt', 'desc'] },\r\n  ]);\r\n  const notes = useSelector((state) => state.firestore.ordered.notes);\r\n  console.log(notes);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs=\"auto\">\r\n          <AddNotes />\r\n          <CardColumns>\r\n            <Col xs=\"auto\">\r\n              <NotesList notes={notes} />\r\n            </Col>\r\n          </CardColumns>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyCQmt1v24SU0cxerozjPm0ubT5yCD8Gqiw',\r\n  authDomain: 'envy-e9d82.firebaseapp.com',\r\n  projectId: 'envy-e9d82',\r\n  storageBucket: 'envy-e9d82.appspot.com',\r\n  messagingSenderId: '147023038686',\r\n  appId: '1:147023038686:web:dd0e67a8d8fa514d9d9a4f',\r\n  measurementId: 'G-TP0PDWJGYS',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nexport { auth };\r\nexport { db };\r\nexport default firebase;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\nimport { auth } from '../fbconfig';\r\n\r\nconst SignIn = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onSignInHandler = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        console.log(error, error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"container\">\r\n      <h1>Sign In</h1>\r\n\r\n      <FormGroup>\r\n        <Label>Email</Label>\r\n        <Input type=\"email\" innerRef={emailRef} placeholder=\"Enter Email\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"examplePassword\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          innerRef={passwordRef}\r\n          placeholder=\"Enter Password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label className=\"remember-me\">\r\n          <Input type=\"checkbox\" />\r\n          <Label> Remember Me</Label>\r\n        </Label>\r\n      </FormGroup>\r\n\r\n      {error.length ? (\r\n        <FormGroup>\r\n          <Alert color=\"danger\">\r\n            <strong>Error!</strong> {error}.\r\n          </Alert>\r\n        </FormGroup>\r\n      ) : null}\r\n\r\n      <FormGroup>\r\n        <Button onClick={onSignInHandler} type=\"submit\" block color=\"success\">\r\n          Submit\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, FormGroup, Label, Button, Input, Form } from 'reactstrap';\r\nimport { auth } from '../fbconfig';\r\n\r\nconst SignUp = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const confirmPasswordRef = useRef(null);\r\n  const displayNameRef = useRef(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onSignUpHandler = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\r\n      setError('The passwords donot match');\r\n      return;\r\n    }\r\n\r\n    await auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((res) => {\r\n        console.log(res, 'Registered');\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        console.log(error, error.message);\r\n      });\r\n\r\n    await auth.currentUser\r\n      .updateProfile({\r\n        displayName: `${displayNameRef.current.value}`,\r\n      })\r\n      .then((res) => {\r\n        console.log(res, 'Name Added');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"container\">\r\n      <h1>Sign Up</h1>\r\n\r\n      <FormGroup>\r\n        <Label>Full Name</Label>\r\n        <Input innerRef={displayNameRef} type=\"text\" placeholder=\"Full name\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Email address</Label>\r\n        <Input innerRef={emailRef} type=\"email\" placeholder=\"Enter email\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Password</Label>\r\n        <Input\r\n          innerRef={passwordRef}\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label>Confirm Password</Label>\r\n        <Input\r\n          innerRef={confirmPasswordRef}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n      </FormGroup>\r\n\r\n      {error.length ? (\r\n        <FormGroup>\r\n          <Alert color=\"danger\">\r\n            <strong>Error!</strong> {error}.\r\n          </Alert>\r\n        </FormGroup>\r\n      ) : null}\r\n\r\n      <FormGroup>\r\n        <Button block color=\"success\" onClick={onSignUpHandler}>\r\n          Sign Up\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <a href=\"#\">Sign In?</a>\r\n        </p>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport NavBar from './components/Navbar';\nimport Favorites from './components/Notes/Favorites';\nimport Notes from './components/Notes/Notes';\nimport Signin from './components/Signin';\nimport SignUp from './components/Signup';\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Signin} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/notes/notes\" component={Notes} />\n        <Route path=\"/notes/favorites\" component={Favorites} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer, // <- needed if using firestore\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from 'redux-firestore';\nimport fbconfig from './fbconfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbconfig)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbconfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      {/* <React.Fragment> */}\n      <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </React.StrictMode>\n      {/* </React.Fragment> */}\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}